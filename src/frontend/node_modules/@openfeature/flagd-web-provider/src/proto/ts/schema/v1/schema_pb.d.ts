import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
/**
 * Request body for bulk flag evaluation, used by the ResolveAll rpc.
 *
 * @generated from message schema.v1.ResolveAllRequest
 * @deprecated
 */
export declare class ResolveAllRequest extends Message<ResolveAllRequest> {
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 1;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveAllRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveAllRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveAllRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveAllRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveAllRequest;
    static equals(a: ResolveAllRequest | PlainMessage<ResolveAllRequest> | undefined, b: ResolveAllRequest | PlainMessage<ResolveAllRequest> | undefined): boolean;
}
/**
 * Response body for bulk flag evaluation, used by the ResolveAll rpc.
 *
 * @generated from message schema.v1.ResolveAllResponse
 * @deprecated
 */
export declare class ResolveAllResponse extends Message<ResolveAllResponse> {
    /**
     * Object structure describing the evaluated flags for the provided context.
     *
     * @generated from field: map<string, schema.v1.AnyFlag> flags = 1;
     */
    flags: {
        [key: string]: AnyFlag;
    };
    constructor(data?: PartialMessage<ResolveAllResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveAllResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveAllResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveAllResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveAllResponse;
    static equals(a: ResolveAllResponse | PlainMessage<ResolveAllResponse> | undefined, b: ResolveAllResponse | PlainMessage<ResolveAllResponse> | undefined): boolean;
}
/**
 * A variant type flag response.
 *
 * @generated from message schema.v1.AnyFlag
 * @deprecated
 */
export declare class AnyFlag extends Message<AnyFlag> {
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 1;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 2;
     */
    variant: string;
    /**
     * The response value of the boolean flag evaluation, will be unset in the case of error.
     *
     * @generated from oneof schema.v1.AnyFlag.value
     */
    value: {
        /**
         * @generated from field: bool bool_value = 3;
         */
        value: boolean;
        case: "boolValue";
    } | {
        /**
         * @generated from field: string string_value = 4;
         */
        value: string;
        case: "stringValue";
    } | {
        /**
         * @generated from field: double double_value = 5;
         */
        value: number;
        case: "doubleValue";
    } | {
        /**
         * @generated from field: google.protobuf.Struct object_value = 6;
         */
        value: Struct;
        case: "objectValue";
    } | {
        case: undefined;
        value?: undefined;
    };
    constructor(data?: PartialMessage<AnyFlag>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.AnyFlag";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnyFlag;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnyFlag;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnyFlag;
    static equals(a: AnyFlag | PlainMessage<AnyFlag> | undefined, b: AnyFlag | PlainMessage<AnyFlag> | undefined): boolean;
}
/**
 * Request body for boolean flag evaluation, used by the ResolveBoolean rpc.
 *
 * @generated from message schema.v1.ResolveBooleanRequest
 * @deprecated
 */
export declare class ResolveBooleanRequest extends Message<ResolveBooleanRequest> {
    /**
     * Flag key of the requested flag.
     *
     * @generated from field: string flag_key = 1;
     */
    flagKey: string;
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveBooleanRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveBooleanRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveBooleanRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveBooleanRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveBooleanRequest;
    static equals(a: ResolveBooleanRequest | PlainMessage<ResolveBooleanRequest> | undefined, b: ResolveBooleanRequest | PlainMessage<ResolveBooleanRequest> | undefined): boolean;
}
/**
 * Response body for boolean flag evaluation. used by the ResolveBoolean rpc.
 *
 * @generated from message schema.v1.ResolveBooleanResponse
 * @deprecated
 */
export declare class ResolveBooleanResponse extends Message<ResolveBooleanResponse> {
    /**
     * The response value of the boolean flag evaluation, will be unset in the case of error.
     *
     * @generated from field: bool value = 1;
     */
    value: boolean;
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 2;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 3;
     */
    variant: string;
    /**
     * Metadata for this evaluation
     *
     * @generated from field: google.protobuf.Struct metadata = 4;
     */
    metadata?: Struct;
    constructor(data?: PartialMessage<ResolveBooleanResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveBooleanResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveBooleanResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveBooleanResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveBooleanResponse;
    static equals(a: ResolveBooleanResponse | PlainMessage<ResolveBooleanResponse> | undefined, b: ResolveBooleanResponse | PlainMessage<ResolveBooleanResponse> | undefined): boolean;
}
/**
 * Request body for string flag evaluation, used by the ResolveString rpc.
 *
 * @generated from message schema.v1.ResolveStringRequest
 * @deprecated
 */
export declare class ResolveStringRequest extends Message<ResolveStringRequest> {
    /**
     * Flag key of the requested flag.
     *
     * @generated from field: string flag_key = 1;
     */
    flagKey: string;
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveStringRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveStringRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveStringRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveStringRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveStringRequest;
    static equals(a: ResolveStringRequest | PlainMessage<ResolveStringRequest> | undefined, b: ResolveStringRequest | PlainMessage<ResolveStringRequest> | undefined): boolean;
}
/**
 * Response body for string flag evaluation. used by the ResolveString rpc.
 *
 * @generated from message schema.v1.ResolveStringResponse
 * @deprecated
 */
export declare class ResolveStringResponse extends Message<ResolveStringResponse> {
    /**
     * The response value of the string flag evaluation, will be unset in the case of error.
     *
     * @generated from field: string value = 1;
     */
    value: string;
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 2;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 3;
     */
    variant: string;
    /**
     * Metadata for this evaluation
     *
     * @generated from field: google.protobuf.Struct metadata = 4;
     */
    metadata?: Struct;
    constructor(data?: PartialMessage<ResolveStringResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveStringResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveStringResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveStringResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveStringResponse;
    static equals(a: ResolveStringResponse | PlainMessage<ResolveStringResponse> | undefined, b: ResolveStringResponse | PlainMessage<ResolveStringResponse> | undefined): boolean;
}
/**
 * Request body for float flag evaluation, used by the ResolveFloat rpc.
 *
 * @generated from message schema.v1.ResolveFloatRequest
 * @deprecated
 */
export declare class ResolveFloatRequest extends Message<ResolveFloatRequest> {
    /**
     * Flag key of the requested flag.
     *
     * @generated from field: string flag_key = 1;
     */
    flagKey: string;
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveFloatRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveFloatRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveFloatRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveFloatRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveFloatRequest;
    static equals(a: ResolveFloatRequest | PlainMessage<ResolveFloatRequest> | undefined, b: ResolveFloatRequest | PlainMessage<ResolveFloatRequest> | undefined): boolean;
}
/**
 * Response body for float flag evaluation. used by the ResolveFloat rpc.
 *
 * @generated from message schema.v1.ResolveFloatResponse
 * @deprecated
 */
export declare class ResolveFloatResponse extends Message<ResolveFloatResponse> {
    /**
     * The response value of the float flag evaluation, will be empty in the case of error.
     *
     * @generated from field: double value = 1;
     */
    value: number;
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 2;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 3;
     */
    variant: string;
    /**
     * Metadata for this evaluation
     *
     * @generated from field: google.protobuf.Struct metadata = 4;
     */
    metadata?: Struct;
    constructor(data?: PartialMessage<ResolveFloatResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveFloatResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveFloatResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveFloatResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveFloatResponse;
    static equals(a: ResolveFloatResponse | PlainMessage<ResolveFloatResponse> | undefined, b: ResolveFloatResponse | PlainMessage<ResolveFloatResponse> | undefined): boolean;
}
/**
 * Request body for int flag evaluation, used by the ResolveInt rpc.
 *
 * @generated from message schema.v1.ResolveIntRequest
 * @deprecated
 */
export declare class ResolveIntRequest extends Message<ResolveIntRequest> {
    /**
     * Flag key of the requested flag.
     *
     * @generated from field: string flag_key = 1;
     */
    flagKey: string;
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveIntRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveIntRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveIntRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveIntRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveIntRequest;
    static equals(a: ResolveIntRequest | PlainMessage<ResolveIntRequest> | undefined, b: ResolveIntRequest | PlainMessage<ResolveIntRequest> | undefined): boolean;
}
/**
 * Response body for int flag evaluation. used by the ResolveInt rpc.
 *
 * @generated from message schema.v1.ResolveIntResponse
 * @deprecated
 */
export declare class ResolveIntResponse extends Message<ResolveIntResponse> {
    /**
     * The response value of the int flag evaluation, will be unset in the case of error.
     *
     * @generated from field: int64 value = 1;
     */
    value: bigint;
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 2;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 3;
     */
    variant: string;
    /**
     * Metadata for this evaluation
     *
     * @generated from field: google.protobuf.Struct metadata = 4;
     */
    metadata?: Struct;
    constructor(data?: PartialMessage<ResolveIntResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveIntResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveIntResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveIntResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveIntResponse;
    static equals(a: ResolveIntResponse | PlainMessage<ResolveIntResponse> | undefined, b: ResolveIntResponse | PlainMessage<ResolveIntResponse> | undefined): boolean;
}
/**
 * Request body for object flag evaluation, used by the ResolveObject rpc.
 *
 * @generated from message schema.v1.ResolveObjectRequest
 * @deprecated
 */
export declare class ResolveObjectRequest extends Message<ResolveObjectRequest> {
    /**
     * Flag key of the requested flag.
     *
     * @generated from field: string flag_key = 1;
     */
    flagKey: string;
    /**
     * Object structure describing the EvaluationContext used in the flag evaluation, see https://openfeature.dev/docs/reference/concepts/evaluation-context
     *
     * @generated from field: google.protobuf.Struct context = 2;
     */
    context?: Struct;
    constructor(data?: PartialMessage<ResolveObjectRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveObjectRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveObjectRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveObjectRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveObjectRequest;
    static equals(a: ResolveObjectRequest | PlainMessage<ResolveObjectRequest> | undefined, b: ResolveObjectRequest | PlainMessage<ResolveObjectRequest> | undefined): boolean;
}
/**
 * Response body for object flag evaluation. used by the ResolveObject rpc.
 *
 * @generated from message schema.v1.ResolveObjectResponse
 * @deprecated
 */
export declare class ResolveObjectResponse extends Message<ResolveObjectResponse> {
    /**
     * The response value of the object flag evaluation, will be unset in the case of error.
     *
     * NOTE: This structure will need to be decoded from google/protobuf/struct.proto before it is returned to the SDK
     *
     * @generated from field: google.protobuf.Struct value = 1;
     */
    value?: Struct;
    /**
     * The reason for the given return value, see https://openfeature.dev/docs/specification/types#resolution-details
     *
     * @generated from field: string reason = 2;
     */
    reason: string;
    /**
     * The variant name of the returned flag value.
     *
     * @generated from field: string variant = 3;
     */
    variant: string;
    /**
     * Metadata for this evaluation
     *
     * @generated from field: google.protobuf.Struct metadata = 4;
     */
    metadata?: Struct;
    constructor(data?: PartialMessage<ResolveObjectResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.ResolveObjectResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveObjectResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveObjectResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveObjectResponse;
    static equals(a: ResolveObjectResponse | PlainMessage<ResolveObjectResponse> | undefined, b: ResolveObjectResponse | PlainMessage<ResolveObjectResponse> | undefined): boolean;
}
/**
 * Response body for the EventStream stream response
 *
 * @generated from message schema.v1.EventStreamResponse
 * @deprecated
 */
export declare class EventStreamResponse extends Message<EventStreamResponse> {
    /**
     * String key indicating the type of event that is being received, for example, provider_ready or configuration_change
     *
     * @generated from field: string type = 1;
     */
    type: string;
    /**
     * Object structure for use when sending relevant metadata to provide context to the event.
     * Can be left unset when it is not required.
     *
     * @generated from field: google.protobuf.Struct data = 2;
     */
    data?: Struct;
    constructor(data?: PartialMessage<EventStreamResponse>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.EventStreamResponse";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventStreamResponse;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventStreamResponse;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventStreamResponse;
    static equals(a: EventStreamResponse | PlainMessage<EventStreamResponse> | undefined, b: EventStreamResponse | PlainMessage<EventStreamResponse> | undefined): boolean;
}
/**
 * Empty stream request body
 *
 * @generated from message schema.v1.EventStreamRequest
 * @deprecated
 */
export declare class EventStreamRequest extends Message<EventStreamRequest> {
    constructor(data?: PartialMessage<EventStreamRequest>);
    static readonly runtime: typeof proto3;
    static readonly typeName = "schema.v1.EventStreamRequest";
    static readonly fields: FieldList;
    static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EventStreamRequest;
    static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EventStreamRequest;
    static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EventStreamRequest;
    static equals(a: EventStreamRequest | PlainMessage<EventStreamRequest> | undefined, b: EventStreamRequest | PlainMessage<EventStreamRequest> | undefined): boolean;
}
