import { EventStreamRequest, EventStreamResponse, ResolveAllRequest, ResolveAllResponse, ResolveBooleanRequest, ResolveBooleanResponse, ResolveFloatRequest, ResolveFloatResponse, ResolveIntRequest, ResolveIntResponse, ResolveObjectRequest, ResolveObjectResponse, ResolveStringRequest, ResolveStringResponse } from "./schema_pb.js";
import { MethodKind } from "@bufbuild/protobuf";
/**
 * Service defines the exposed rpcs of flagd
 *
 * @generated from service schema.v1.Service
 * @deprecated
 */
export declare const Service: {
    readonly typeName: "schema.v1.Service";
    readonly methods: {
        /**
         * @generated from rpc schema.v1.Service.ResolveAll
         */
        readonly resolveAll: {
            readonly name: "ResolveAll";
            readonly I: typeof ResolveAllRequest;
            readonly O: typeof ResolveAllResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.ResolveBoolean
         */
        readonly resolveBoolean: {
            readonly name: "ResolveBoolean";
            readonly I: typeof ResolveBooleanRequest;
            readonly O: typeof ResolveBooleanResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.ResolveString
         */
        readonly resolveString: {
            readonly name: "ResolveString";
            readonly I: typeof ResolveStringRequest;
            readonly O: typeof ResolveStringResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.ResolveFloat
         */
        readonly resolveFloat: {
            readonly name: "ResolveFloat";
            readonly I: typeof ResolveFloatRequest;
            readonly O: typeof ResolveFloatResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.ResolveInt
         */
        readonly resolveInt: {
            readonly name: "ResolveInt";
            readonly I: typeof ResolveIntRequest;
            readonly O: typeof ResolveIntResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.ResolveObject
         */
        readonly resolveObject: {
            readonly name: "ResolveObject";
            readonly I: typeof ResolveObjectRequest;
            readonly O: typeof ResolveObjectResponse;
            readonly kind: MethodKind.Unary;
        };
        /**
         * @generated from rpc schema.v1.Service.EventStream
         */
        readonly eventStream: {
            readonly name: "EventStream";
            readonly I: typeof EventStreamRequest;
            readonly O: typeof EventStreamResponse;
            readonly kind: MethodKind.ServerStreaming;
        };
    };
};
